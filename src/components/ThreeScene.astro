---
interface Props {
  width?: string;
  height?: string;
  className?: string;
}

const { width = "100%", height = "100%", className = "" } = Astro.props;
---

<div class={`three-container ${className} overflow-hidden` } style={`width: ${width}; height: ${height};`}>
  <canvas class="three-canvas w-full h-full"></canvas>
</div>

<script>
  import * as THREE from 'three';

  // Wait for the DOM to be fully loaded
  document.addEventListener('DOMContentLoaded', () => {
    const container = document.querySelector('.three-container');
    const canvas = container?.querySelector('.three-canvas');

    if (!container || !canvas) return;

    // Scene setup
    const scene = new THREE.Scene();
    const camera = new THREE.PerspectiveCamera(75, container.clientWidth / container.clientHeight, 0.1, 1000);
    const renderer = new THREE.WebGLRenderer({ canvas, alpha: true });
    renderer.setSize(container.clientWidth, container.clientHeight);

    // Lighting
    const hemiLight = new THREE.HemisphereLight(0x0099ff, 0xaa5500)
    scene.add(hemiLight)

    // Create a simple shape
    const geo = new THREE.IcosahedronGeometry(1.0, 2)
    const mat = new THREE.MeshStandardMaterial({
    color: 0xffffff,
    flatShading: true,
    })
    const mesh = new THREE.Mesh(geo, mat)
    scene.add(mesh)

    const wireMat = new THREE.MeshBasicMaterial({
    color: 0xffffff,
    wireframe: true,
    })
    const wireMesh = new THREE.Mesh(geo, wireMat)
    wireMesh.scale.setScalar(1.003)
    mesh.add(wireMesh)

    // Position camera
    camera.position.z = 2;

    // Animation loop
    const animate = () => {
      requestAnimationFrame(animate);
      mesh.rotation.x += 0.001;
      mesh.rotation.y += 0.001;
      renderer.render(scene, camera);
    };

    // Handle window resize
    window.addEventListener('resize', () => {
      if (!container) return;
      const width = container.clientWidth;
      const height = container.clientHeight;
      camera.aspect = width / height;
      camera.updateProjectionMatrix();
      renderer.setSize(width, height);
    });

    animate();
  });
</script> 